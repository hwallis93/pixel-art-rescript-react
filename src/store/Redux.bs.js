// Generated by ReScript, PLEASE EDIT WITH CARE

import * as Reductive from "reductive/src/reductive.bs.js";
import * as ReductiveContext from "reductive/src/reductiveContext.bs.js";
import * as GridSlice$RescriptReactIntro from "./GridSlice.bs.js";
import * as SettingsSlice$RescriptReactIntro from "./SettingsSlice.bs.js";

var preloadedState = {
  grid: GridSlice$RescriptReactIntro.initialState,
  settings: SettingsSlice$RescriptReactIntro.initialState
};

function reducer(state, action) {
  if (action.TAG === /* GridAction */0) {
    return {
            grid: GridSlice$RescriptReactIntro.reducer(state.grid, action._0),
            settings: state.settings
          };
  } else {
    return {
            grid: state.grid,
            settings: SettingsSlice$RescriptReactIntro.reducer(state.settings, action._0)
          };
  }
}

var store = Reductive.Store.create(reducer, preloadedState, undefined, undefined);

var include = ReductiveContext.Make({});

var Store = include;

export {
  preloadedState ,
  reducer ,
  store ,
  Store ,
  
}
/* store Not a pure module */
